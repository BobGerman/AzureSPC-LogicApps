{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "sharepointonline_1_Connection_Name": {
      "type": "string",
      "defaultValue": "sharepointonline"
    },
    "sharepointonline_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Bob@BGTest18.onmicrosoft.com"
    },
    "cognitiveservicestextanalytics_1_Connection_Name": {
      "type": "string",
      "defaultValue": "cognitiveservicestextanalytics"
    },
    "cognitiveservicestextanalytics_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "TextAnalytics1"
    },
    "cognitiveservicestextanalytics_1_apiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Cognitive Services Account Key"
      }
    },
    "cognitiveservicestextanalytics_1_siteUrl": {
      "type": "string",
      "metadata": {
        "description": "Root site url (Example: https://westus.api.cognitive.microsoft.com ).If not specified site url will be defaulted to 'https://westus.api.cognitive.microsoft.com'."
      },
      "defaultValue": "https://eastus.api.cognitive.microsoft.com/text/analytics/v2.0"
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Response_if_succeeded": {
              "type": "Response",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "message": "POSTED"
                }
              },
              "runAfter": {
                "Create_item": [
                  "Succeeded"
                ]
              }
            },
            "Create_item": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "Title": "@{concat(triggerBody()?['comment'], ' (',variables('Sentiment'),')')}"
                },
                "path": "/datasets/@{encodeURIComponent(encodeURIComponent('https://bgtest18.sharepoint.com/sites/ApiTest'))}/tables/@{encodeURIComponent(encodeURIComponent('f5367db6-c77a-4b9f-9ca5-155c972c8961'))}/items"
              },
              "runAfter": {
                "Determine_sentiment": [
                  "Succeeded"
                ]
              }
            },
            "Response_if_failed": {
              "type": "Response",
              "kind": "http",
              "inputs": {
                "statusCode": 400,
                "schema": {
                  "message": "error"
                }
              },
              "runAfter": {
                "Create_item": [
                  "Failed"
                ]
              }
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Sentiment",
                    "type": "String",
                    "value": "neutral"
                  }
                ]
              },
              "runAfter": {}
            },
            "Determine_sentiment": {
              "type": "Scope",
              "actions": {
                "Detect_Sentiment": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "text": "@triggerBody()?['comment']"
                    },
                    "path": "/sentiment"
                  },
                  "runAfter": {}
                },
                "Check_unhappy": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "less": [
                          "@float(body('Detect_Sentiment')?['score'])",
                          0.3
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "set_sentiment_to_uinhappy": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "Sentiment",
                        "value": "unhappy"
                      },
                      "runAfter": {}
                    }
                  },
                  "runAfter": {
                    "Detect_Sentiment": [
                      "Succeeded"
                    ]
                  }
                },
                "Check_happy": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@float(body('Detect_Sentiment')?['score'])",
                          0.7
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "set_sentiment_to_happy": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "Sentiment",
                        "value": "happy"
                      },
                      "runAfter": {}
                    }
                  },
                  "runAfter": {
                    "Check_unhappy": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "request": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "siteUrl": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "sharepointonline": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'sharepointonline')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sharepointonline_1_Connection_Name'))]",
                "connectionName": "[parameters('sharepointonline_1_Connection_Name')]"
              },
              "cognitiveservicestextanalytics": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'cognitiveservicestextanalytics')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('cognitiveservicestextanalytics_1_Connection_Name'))]",
                "connectionName": "[parameters('cognitiveservicestextanalytics_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('sharepointonline_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('cognitiveservicestextanalytics_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('sharepointonline_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'sharepointonline')]"
        },
        "displayName": "[parameters('sharepointonline_1_Connection_DisplayName')]"
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('cognitiveservicestextanalytics_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'cognitiveservicestextanalytics')]"
        },
        "displayName": "[parameters('cognitiveservicestextanalytics_1_Connection_DisplayName')]",
        "parameterValues": {
          "apiKey": "[parameters('cognitiveservicestextanalytics_1_apiKey')]",
          "siteUrl": "[parameters('cognitiveservicestextanalytics_1_siteUrl')]"
        }
      }
    }
  ],
  "outputs": {}
}